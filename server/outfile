Jasmine started
Server running on port 4000

  Images Routes suite
    [32mâˆš should update image data[39m
    [32mâˆš should return image data[39m
    [32mâˆš should delete image data[39m

Executed 3 of 3 specs[32m SUCCESS[39m in 0.081 sec.
Jasmine started
Server running on port 4000

  Images Routes suite
    [32mâˆš should update image data[39m
    [32mâˆš should return image data[39m
    [32mâˆš should delete image data[39m

Executed 3 of 3 specs[32m SUCCESS[39m in 0.078 sec.
Jasmine started
Server running on port 4000
ReferenceError: data is not defined
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:44)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:73:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:174:3)

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got {}[39m
ReferenceError: data is not defined
    at Notification.getNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:63:52)
    at exports.notification_get_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:47:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:365:14)
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:410:3)
    [31mÃ— should return notification data[39m
      [31m- [39m[31mError: expected "Content-Type" matching /json/, got "text/html; charset=utf-8"[39m
ReferenceError: data is not defined
    at Notification.deleteNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:74:49)
    at exports.notification_delete_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:60:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:365:14)
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:410:3)
    [32mâˆš should delete notification data[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got {}[39m

2) Notification Routes suite should return notification data
  [31m- [39m[31mError: expected "Content-Type" matching /json/, got "text/html; charset=utf-8"[39m

Executed 3 of 3 specs[31m (2 FAILED)[39m in 0.078 sec.
Jasmine started
Server running on port 4000
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:73:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=1' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=1' }[39m
    [32mâˆš should return notification data[39m
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.deleteNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:74:5)
    at exports.notification_delete_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:60:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',
  sqlState: '42S22',
  index: 0,
  sql: 'DELETE FROM notifications where id=undefined' }
    [31mÃ— should delete notification data[39m
      [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=1' }[39m

2) Notification Routes suite should delete notification data
  [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

Executed 3 of 3 specs[31m (2 FAILED)[39m in 0.135 sec.
Jasmine started
Server running on port 4000
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:73:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.getNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:63:5)
    at exports.notification_get_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:47:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT * FROM notifications WHERE id =undefined' }
    [32mâˆš should return notification data[39m
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.deleteNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:74:5)
    at exports.notification_delete_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:60:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',
  sqlState: '42S22',
  index: 0,
  sql: 'DELETE FROM notifications where id=undefined' }
    [31mÃ— should delete notification data[39m
      [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

2) Notification Routes suite should delete notification data
  [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

Executed 3 of 3 specs[31m (2 FAILED)[39m in 0.084 sec.
Jasmine started
Server running on port 4000
{ message: 'Test Message Changed' }
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.getNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:63:5)
    at exports.notification_get_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:47:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT * FROM notifications WHERE id =undefined' }
    [32mâˆš should return notification data[39m
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.deleteNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:74:5)
    at exports.notification_delete_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:60:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at param (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:354:14)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',
  sqlState: '42S22',
  index: 0,
  sql: 'DELETE FROM notifications where id=undefined' }
    [31mÃ— should delete notification data[39m
      [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

2) Notification Routes suite should delete notification data
  [31m- [39m[31mError: expected {} response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'where clause\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'DELETE FROM notifications where id=undefined' }[39m

Executed 3 of 3 specs[31m (2 FAILED)[39m in 0.083 sec.
Jasmine started
Server running on port 4000

Executed 0 of 0 specs[32m SUCCESS[39m in 0.014 sec.
Jasmine started
Server running on port 4000
{ message: 'Test Message Changed' }
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.069 sec.
Jasmine started
Server running on port 4000
{ message: 'Test Message Changed' }
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.084 sec.
Jasmine started
Server running on port 4000
{ message: 'Test Message Changed' }
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.061 sec.
Jasmine started
Server running on port 4000
{ noti: 'Test Message Changed' }
{ Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'field list'
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',
  sqlState: '42S22',
  index: 0,
  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
      [31m  errno: 1054,[39m
      [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
      [31m  sqlState: '42S22',[39m
      [31m  index: 0,[39m
      [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_BAD_FIELD_ERROR',[39m
  [31m  errno: 1054,[39m
  [31m  sqlMessage: 'Unknown column \'undefined\' in \'field list\'',[39m
  [31m  sqlState: '42S22',[39m
  [31m  index: 0,[39m
  [31m  sql: 'UPDATE notifications SET noti=undefined WHERE id=null' }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.059 sec.
Jasmine started
Server running on port 4000
{ noti: 'Test Message Changed' }
{ Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Message Changed WHERE id=null' at line 1
    at Query.Sequence._packetToError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\sequences\Query.js:77:18)
    at Protocol._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:91:28)
    at Socket.<anonymous> (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:525:10)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    --------------------
    at Protocol._enqueue (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at Connection.query (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\mysql\lib\Connection.js:201:25)
    at Notification.updateNoti (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\models\notificationModel.js:85:5)
    at exports.notification_update_by_id (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\controllers\notificationController.js:74:7)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\express\lib\router\index.js:335:12)
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage:
   'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Message Changed WHERE id=null\' at line 1',
  sqlState: '42000',
  index: 0,
  sql:
   'UPDATE notifications SET noti=Test Message Changed WHERE id=null' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_PARSE_ERROR',[39m
      [31m  errno: 1064,[39m
      [31m  sqlMessage:[39m
      [31m   'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Message Changed WHERE id=null\' at line 1',[39m
      [31m  sqlState: '42000',[39m
      [31m  index: 0,[39m
      [31m  sql:[39m
      [31m   'UPDATE notifications SET noti=Test Message Changed WHERE id=null' }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { code: 'ER_PARSE_ERROR',[39m
  [31m  errno: 1064,[39m
  [31m  sqlMessage:[39m
  [31m   'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Message Changed WHERE id=null\' at line 1',[39m
  [31m  sqlState: '42000',[39m
  [31m  index: 0,[39m
  [31m  sql:[39m
  [31m   'UPDATE notifications SET noti=Test Message Changed WHERE id=null' }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.057 sec.
Jasmine started
Server running on port 4000
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.058 sec.
Jasmine started
Server running on port 4000
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.059 sec.
Jasmine started
Server running on port 4000
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m
    [31mÃ— Notification Routes suite[39m
      [31m- [39m[31mUnhandled promise rejection: ReferenceError: ImageId is not defined[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

2) Notification Routes suite
  [31m- [39m[31mUnhandled promise rejection: ReferenceError: ImageId is not defined[39m

**************************************************
*                     Errors                     *
**************************************************

1) Notification Routes suite
  [31m- [39m[31mUnhandled promise rejection: ReferenceError: ImageId is not defined[39m

Executed 1 of 1 spec[31m (1 ERROR)[39m[31m (1 FAILED)[39m in 0.061 sec.
Jasmine started
Server running on port 4000
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.084 sec.
Jasmine started
Server running on port 4000
Response {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      { end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-security-policy': 'default-src \'none\'',
        'x-content-type-options': 'nosniff',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '159',
        date: 'Sun, 07 Jun 2020 11:09:01 GMT',
        connection: 'close' },
     rawHeaders:
      [ 'X-Powered-By',
        'Express',
        'Access-Control-Allow-Origin',
        '*',
        'Content-Security-Policy',
        'default-src \'none\'',
        'X-Content-Type-Options',
        'nosniff',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '159',
        'Date',
        'Sun, 07 Jun 2020 11:09:01 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 30,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55307\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 30\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
  request:
   Test {
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://127.0.0.1:55307/notification/create',
     _header:
      { 'user-agent': 'node-superagent/3.8.3',
        'content-type': 'application/json' },
     header:
      { 'User-Agent': 'node-superagent/3.8.3',
        'Content-Type': 'application/json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 0,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _buffer: true,
     app:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _asserts: [],
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _data: { id: 1, noti: 'Test Message' },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 30,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55307\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 30\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: '127.0.0.1:55307',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      { drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 30,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55307\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 30\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/notification/create',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        'content-length': [Array] } },
  text:
   '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
  body: {},
  files: undefined,
  buffered: true,
  headers:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:09:01 GMT',
     connection: 'close' },
  header:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:09:01 GMT',
     connection: 'close' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error:
   { Error: cannot POST /notification/create (404)
       at Response.toError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:94:15)
       at ResponseBase._setStatusProperties (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\response-base.js:123:16)
       at new Response (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:41:8)
       at Test.Request._emitResponse (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:752:20)
       at IncomingMessage.parser (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:916:38)
       at IncomingMessage.emit (events.js:187:15)
       at endReadableNT (_stream_readable.js:1094:12)
       at process._tickCallback (internal/process/next_tick.js:63:19)
     status: 404,
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
     method: 'POST',
     path: '/notification/create' },
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [] }
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.063 sec.
Jasmine started
Server running on port 4000
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.063 sec.
Jasmine started
Server running on port 4000
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.06 sec.
Jasmine started
Server running on port 4000
Response {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      { end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-security-policy': 'default-src \'none\'',
        'x-content-type-options': 'nosniff',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '159',
        date: 'Sun, 07 Jun 2020 11:10:13 GMT',
        connection: 'close' },
     rawHeaders:
      [ 'X-Powered-By',
        'Express',
        'Access-Control-Allow-Origin',
        '*',
        'Content-Security-Policy',
        'default-src \'none\'',
        'X-Content-Type-Options',
        'nosniff',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '159',
        'Date',
        'Sun, 07 Jun 2020 11:10:13 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 33,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55332\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 33\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
  request:
   Test {
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://127.0.0.1:55332/notification/create',
     _header:
      { 'user-agent': 'node-superagent/3.8.3',
        'content-type': 'application/json' },
     header:
      { 'User-Agent': 'node-superagent/3.8.3',
        'Content-Type': 'application/json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 0,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _buffer: true,
     app:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _asserts: [],
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _data: { id: 1, message: 'Test Message' },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 33,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55332\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 33\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: '127.0.0.1:55332',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      { drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 33,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55332\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/json\r\nContent-Length: 33\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/notification/create',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        'content-length': [Array] } },
  text:
   '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
  body: {},
  files: undefined,
  buffered: true,
  headers:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:10:13 GMT',
     connection: 'close' },
  header:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:10:13 GMT',
     connection: 'close' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error:
   { Error: cannot POST /notification/create (404)
       at Response.toError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:94:15)
       at ResponseBase._setStatusProperties (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\response-base.js:123:16)
       at new Response (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:41:8)
       at Test.Request._emitResponse (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:752:20)
       at IncomingMessage.parser (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:916:38)
       at IncomingMessage.emit (events.js:187:15)
       at endReadableNT (_stream_readable.js:1094:12)
       at process._tickCallback (internal/process/next_tick.js:63:19)
     status: 404,
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
     method: 'POST',
     path: '/notification/create' },
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [] }
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.065 sec.
Jasmine started
Server running on port 4000
Response {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      { end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-security-policy': 'default-src \'none\'',
        'x-content-type-options': 'nosniff',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '159',
        date: 'Sun, 07 Jun 2020 11:10:43 GMT',
        connection: 'close' },
     rawHeaders:
      [ 'X-Powered-By',
        'Express',
        'Access-Control-Allow-Origin',
        '*',
        'Content-Security-Policy',
        'default-src \'none\'',
        'X-Content-Type-Options',
        'nosniff',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '159',
        'Date',
        'Sun, 07 Jun 2020 11:10:43 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 27,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55340\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
  request:
   Test {
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://127.0.0.1:55340/notification/create',
     _header:
      { 'user-agent': 'node-superagent/3.8.3',
        'content-type': 'application/x-www-form-urlencoded' },
     header:
      { 'User-Agent': 'node-superagent/3.8.3',
        'Content-Type': 'application/x-www-form-urlencoded' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 0,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _buffer: true,
     app:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _asserts: [],
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _data: { id: 1, message: 'Test Message' },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 27,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55340\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: '127.0.0.1:55340',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      { drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 27,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55340\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/notification/create',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        'content-length': [Array] } },
  text:
   '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
  body: {},
  files: undefined,
  buffered: true,
  headers:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:10:43 GMT',
     connection: 'close' },
  header:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:10:43 GMT',
     connection: 'close' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error:
   { Error: cannot POST /notification/create (404)
       at Response.toError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:94:15)
       at ResponseBase._setStatusProperties (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\response-base.js:123:16)
       at new Response (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:41:8)
       at Test.Request._emitResponse (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:752:20)
       at IncomingMessage.parser (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:916:38)
       at IncomingMessage.emit (events.js:187:15)
       at endReadableNT (_stream_readable.js:1094:12)
       at process._tickCallback (internal/process/next_tick.js:63:19)
     status: 404,
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
     method: 'POST',
     path: '/notification/create' },
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [] }
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.063 sec.
Jasmine started
Server running on port 4000
Response {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      { end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-security-policy': 'default-src \'none\'',
        'x-content-type-options': 'nosniff',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '159',
        date: 'Sun, 07 Jun 2020 11:11:52 GMT',
        connection: 'close' },
     rawHeaders:
      [ 'X-Powered-By',
        'Express',
        'Access-Control-Allow-Origin',
        '*',
        'Content-Security-Policy',
        'default-src \'none\'',
        'X-Content-Type-Options',
        'nosniff',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '159',
        'Date',
        'Sun, 07 Jun 2020 11:11:52 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 27,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55364\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
  request:
   Test {
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://127.0.0.1:55364/notification/create',
     _header:
      { 'user-agent': 'node-superagent/3.8.3',
        'content-type': 'application/x-www-form-urlencoded' },
     header:
      { 'User-Agent': 'node-superagent/3.8.3',
        'Content-Type': 'application/x-www-form-urlencoded' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 0,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _buffer: true,
     app:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _asserts: [],
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 20 },
     _data: { id: 1, message: 'Test Message' },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 27,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55364\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/notification/create',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: '127.0.0.1:55364',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      { drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 27,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST /notification/create HTTP/1.1\r\nHost: 127.0.0.1:55364\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 27\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/notification/create',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        'content-length': [Array] } },
  text:
   '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
  body: {},
  files: undefined,
  buffered: true,
  headers:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:11:52 GMT',
     connection: 'close' },
  header:
   { 'x-powered-by': 'Express',
     'access-control-allow-origin': '*',
     'content-security-policy': 'default-src \'none\'',
     'x-content-type-options': 'nosniff',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '159',
     date: 'Sun, 07 Jun 2020 11:11:52 GMT',
     connection: 'close' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error:
   { Error: cannot POST /notification/create (404)
       at Response.toError (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:94:15)
       at ResponseBase._setStatusProperties (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\response-base.js:123:16)
       at new Response (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\response.js:41:8)
       at Test.Request._emitResponse (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:752:20)
       at IncomingMessage.parser (C:\Users\Xeno\Documents\vs_code_pg\wethinkcode\matcha\server\node_modules\superagent\lib\node\index.js:916:38)
       at IncomingMessage.emit (events.js:187:15)
       at endReadableNT (_stream_readable.js:1094:12)
       at process._tickCallback (internal/process/next_tick.js:63:19)
     status: 404,
     text:
      '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /notification/create</pre>\n</body>\n</html>\n',
     method: 'POST',
     path: '/notification/create' },
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [] }
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.062 sec.
Jasmine started
Server running on port 4000
undefined
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.06 sec.
Jasmine started
Server running on port 4000
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.06 sec.
Jasmine started
Server running on port 4000
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.065 sec.
Jasmine started
Server running on port 4000
undefined
{ noti: 'Test Message Changed' }

  Notification Routes suite
    [31mÃ— should update notification data[39m
      [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
      [31m  affectedRows: 0,[39m
      [31m  insertId: 0,[39m
      [31m  serverStatus: 2,[39m
      [31m  warningCount: 0,[39m
      [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
      [31m  protocol41: true,[39m
      [31m  changedRows: 0 }[39m

**************************************************
*                    Failures                    *
**************************************************

1) Notification Routes suite should update notification data
  [31m- [39m[31mError: expected { success: 'Message updated' } response body, got { fieldCount: 0,[39m
  [31m  affectedRows: 0,[39m
  [31m  insertId: 0,[39m
  [31m  serverStatus: 2,[39m
  [31m  warningCount: 0,[39m
  [31m  message: '(Rows matched: 0  Changed: 0  Warnings: 0',[39m
  [31m  protocol41: true,[39m
  [31m  changedRows: 0 }[39m

Executed 1 of 1 spec[31m (1 FAILED)[39m in 0.059 sec.
